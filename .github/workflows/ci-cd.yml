name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
   APP_IMAGE: felipethales/monitoring-demo-app
   PROMETHEUS_IMAGE: felipethales/monitoring-demo-prometheus
   GRAFANA_IMAGE: felipethales/monitoring-demo-grafana

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: network=host

    # Cache inteligente para acelerar o build
    - uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}

    # Build da imagem do aplicativo
    - name: Build and Push App Image
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - run: |
        docker buildx build \
          --platform linux/amd64 \
          -t ${{ env.APP_IMAGE }}:latest \
          --cache-from type=local,src=/tmp/.buildx-cache \
          --cache-to type=local,dest=/tmp/.buildx-cache-new \
          --push \
          ./app

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        cd app
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        cd app
        python -m pytest -v

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and Push Prometheus Image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          -t ${{ env.PROMETHEUS_IMAGE }}:latest \
          --push \
          ./prometheus

    - name: Build and Push Grafana Image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          -t ${{ env.GRAFANA_IMAGE }}:latest \
          --push \
          ./Grafana

    - name: Verify pushed images
      run: |
        echo "Imagens publicadas com sucesso:"
        echo "- ${{ env.APP_IMAGE }}:latest"
        echo "- ${{ env.PROMETHEUS_IMAGE }}:latest"
        echo "- ${{ env.GRAFANA_IMAGE }}:latest"
